package yuma140902.mcmodlib;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import yuma140902.mcmodlib.api.update.IUpdateChecker;
import yuma140902.mcmodlib.api.update.UpdateCheckerRegistry;
import yuma140902.mcmodlib.config.YumaLibConfigCore;
import yuma140902.mcmodlib.proxy.CommonProxy;

@Mod(modid = YumaLibConstants.MOD_ID, name = YumaLibConstants.MOD_NAME, version = YumaLibConstants.MOD_VERSION, useMetadata = true, guiFactory = YumaLibConstants.CONFIG_GUI_FACTORY)
public class ModYumaLib {
	
	public static final Logger LOGGER = LogManager.getLogger(YumaLibConstants.MOD_NAME);
	
	@Mod.Metadata(YumaLibConstants.MOD_ID)
	public static ModMetadata modMetadata;
	
	@Mod.Instance(YumaLibConstants.MOD_ID)
	public static ModYumaLib INSTANCE;
	
	@SidedProxy(modId = YumaLibConstants.MOD_ID, clientSide = YumaLibConstants.PROXY_CLIENT, serverSide = YumaLibConstants.PROXY_COMMON)
	public static CommonProxy proxy;
	
	private void loadModMetadata(ModMetadata modMetadata) {
		modMetadata.modId = YumaLibConstants.MOD_ID;
		modMetadata.name = YumaLibConstants.MOD_NAME;
		modMetadata.version = YumaLibConstants.MOD_VERSION;
		modMetadata.authorList.add("yuma140902");
		modMetadata.description = "Library for UpToDateMod";
		//modMetadata.url = "https://www.curseforge.com/minecraft/mc-mods/yumalib";
		modMetadata.autogenerated = false;
		modMetadata.logoFile = "assets/yumalib/textures/logo.png";
	}
	
	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		loadModMetadata(modMetadata);
		YumaLibConfigCore.loadConfig(event);
		proxy.registerEventHandlers();
	}
	
	@EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		for(IUpdateChecker updateChecker : UpdateCheckerRegistry.INSTANCE.list()) {
			try {
				updateChecker.checkForUpdates();
			}
			catch (Exception e) {
				e.printStackTrace();
			}
		}
		
	}
}
