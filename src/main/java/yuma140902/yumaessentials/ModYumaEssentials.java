package yuma140902.yumaessentials;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import yuma140902.yumaessentials.config.YEConfigCore;
import yuma140902.yumaessentials.proxy.YECommonProxy;
import yuma140902.yumaessentials.util.StringUtil;
import yuma140902.yumalib.api.context.InitModContext;
import yuma140902.yumalib.api.registry.Contexts;

@Mod(modid = YEConstants.MOD_ID, name = YEConstants.MOD_NAME, version = YEConstants.MOD_VERSION, useMetadata = true, guiFactory = YEConstants.CONFIG_GUI_FACTORY,
				dependencies = "required-after:yumalib;required-after:uptodate")
public class ModYumaEssentials {
	
	public static final Logger LOGGER = LogManager.getLogger(YEConstants.MOD_NAME);
	
	@Mod.Metadata(YEConstants.MOD_ID)
	public static ModMetadata modMetadata;
	
	@Mod.Instance(YEConstants.MOD_ID)
	public static ModYumaEssentials INSTANCE;
	
	@SidedProxy(modId = YEConstants.MOD_ID, clientSide = YEConstants.PROXY_CLIENT, serverSide = YEConstants.PROXY_COMMON)
	public static YECommonProxy proxy;
	
	private void loadModMetadata(ModMetadata modMetadata) {
		modMetadata.modId = YEConstants.MOD_ID;
		modMetadata.name = YEConstants.MOD_NAME;
		modMetadata.version = YEConstants.MOD_VERSION;
		modMetadata.authorList.add("yuma140902");
		modMetadata.description = "The essential things";
		modMetadata.autogenerated = false;
	}
	
	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		LOGGER.info("preInit");
		loadModMetadata(modMetadata);
		YEConfigCore.loadConfig(event);
		
		Contexts.setContext(new InitModContext(YEConstants.MOD_NAME, StringUtil.name));
		
		YEBlocks.registerAll();
		YEItems.registerAll();
		
		proxy.registerEventHandlers();
	}
	
	@Mod.EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		
		Contexts.removeContext();
	}
}

